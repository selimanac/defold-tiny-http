local w

local function client_callbacks(self, message)
    print("========================")
    print("client_callbacks")
    pprint(message)
    local j = json.decode(message.result)
    pprint(j)
end

local function stopserver()
    -- print("Lua Stop")
    --  thttp.server_stop()
end

local function server_callbacks(self, message)
    print("========================")
    print("server_callbacks")
    pprint(message)

    local j = json.decode(message.result)

    if j.server_status == 1 then
        print("Server Running")

        local params = {
            data = '{ "title": "TEST URLexample glossary" }',
            test = '{ "id": 1 }'
        }
        --thttp.client_get("/str/wef23",123);
        thttp.client_post("/test", params, 126)
        timer.delay(1, false, stopserver)
    end
    pprint(j)
end

function init(self)
    -- host, port, callback

    local host = "localhost"
    local port = 8800
    local enable_log = false -- Optional
    local enable_error = true -- Optional

    local end_points = {
        {
            end_point_type = thttp.METHOD_GET,
            end_point = "/mix/(.+)"
        },
        {
            end_point_type = thttp.METHOD_POST,
            end_point = "/test/(\\w+)"
        }
    }

    -- thttp.server_post_content('{ "postback": "from server" }')
    thttp.server_start(host, port, server_callbacks, enable_log, enable_error, end_points)

    -- thttp.server_start(host, port, server_callbacks, enable_log, enable_error)

    thttp.client_start(host, port, client_callbacks)

    go.animate("/go1", "position.y", go.PLAYBACK_LOOP_PINGPONG, 0, go.EASING_INBACK, 3)
end
