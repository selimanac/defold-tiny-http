local function client_callbacks(self, message)
	print("client_callbacks")
	pprint(message)
--	local j = json.decode(message.json)
	--pprint(j.result)
end


local function server_callbacks(self, message)
	print("server_callbacks")
	pprint(message)

	if message.result == "server_is_running" then
		thttp.client("localhost", 8800 ,client_callbacks)
		thttp.hi();
	end
--	local j = json.decode(message.json)
----	pprint(j.result)
end




local function callback()
	
end

function init(self)
	-- host, port, callback
	thttp.serve("localhost", 8800 ,server_callbacks)

	timer.delay(2, false, callback)
	

	go.animate("/go1", "position.y", go.PLAYBACK_LOOP_PINGPONG, 0, go.EASING_INBACK, 3)
	--thttp.hi();
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Remove this function if not needed
end
